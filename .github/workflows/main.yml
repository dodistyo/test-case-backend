name: CI/CD with Docker and SSH Deployment

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.7.1'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64 -t dodistyo/sample-backend:latest dodistyo/sample-backend:${{ github.sha }} .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push dodistyo/sample-backend:latest dodistyo/sample-backend:${{ github.sha }}
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: SSH into deployment server and deploy
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.DEPLOY_HOST }}
  #         username: ${{ secrets.DEPLOY_USERNAME }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         script: |
  #           ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
  #           docker stop myapp || true
  #           docker rm myapp || true
  #           docker pull myapp
  #           docker run -d --name myapp -p 80:80 myapp
  #           EOF
